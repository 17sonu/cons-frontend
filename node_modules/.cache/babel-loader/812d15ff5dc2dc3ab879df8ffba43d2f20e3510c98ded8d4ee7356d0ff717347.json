{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\New folder (8)\\\\frontend\\\\src\\\\components\\\\UserDetails.js\",\n  _s = $RefreshSig$();\n// src/components/UserDetails.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDetails = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [user, setUser] = useState(null); // Initially set to null to handle loading state\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const res = await api.get(`/users/${userId}`);\n        setUser(res.data);\n        setLoading(false); // Set loading to false when data is fetched\n      } catch (error) {\n        console.error('Error fetching user:', error);\n        setLoading(false); // Also set loading to false on error\n      }\n    };\n    fetchUser();\n  }, [userId]);\n\n  // Display loading message or a fallback if user data is not loaded\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"User not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Role: \", user.role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDetails, \"AAtcRp5zw4kgD0nAoHemtUZg/9I=\", false, function () {\n  return [useParams];\n});\n_c = UserDetails;\nexport default UserDetails;\nvar _c;\n$RefreshReg$(_c, \"UserDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","api","jsxDEV","_jsxDEV","UserDetails","_s","userId","user","setUser","loading","setLoading","fetchUser","res","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","role","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/New folder (8)/frontend/src/components/UserDetails.js"],"sourcesContent":["// src/components/UserDetails.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport api from '../api';\r\n\r\nconst UserDetails = () => {\r\n  const { userId } = useParams();\r\n  const [user, setUser] = useState(null); // Initially set to null to handle loading state\r\n  const [loading, setLoading] = useState(true); // Add loading state\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const res = await api.get(`/users/${userId}`);\r\n        setUser(res.data);\r\n        setLoading(false); // Set loading to false when data is fetched\r\n      } catch (error) {\r\n        console.error('Error fetching user:', error);\r\n        setLoading(false); // Also set loading to false on error\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, [userId]);\r\n\r\n  // Display loading message or a fallback if user data is not loaded\r\n  if (loading) return <p>Loading...</p>;\r\n  if (!user) return <p>User not found</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.name}</h2>\r\n      <p>Email: {user.email}</p>\r\n      <p>Role: {user.role}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDetails;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,UAAUP,MAAM,EAAE,CAAC;QAC7CE,OAAO,CAACI,GAAG,CAACE,IAAI,CAAC;QACjBJ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CL,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IACDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;;EAEZ;EACA,IAAIG,OAAO,EAAE,oBAAON,OAAA;IAAAc,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAI,CAACd,IAAI,EAAE,oBAAOJ,OAAA;IAAAc,QAAA,EAAG;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEvC,oBACElB,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAKV,IAAI,CAACe;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBlB,OAAA;MAAAc,QAAA,GAAG,SAAO,EAACV,IAAI,CAACgB,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BlB,OAAA;MAAAc,QAAA,GAAG,QAAM,EAACV,IAAI,CAACiB,IAAI;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAAChB,EAAA,CA9BID,WAAW;EAAA,QACIJ,SAAS;AAAA;AAAAyB,EAAA,GADxBrB,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}